[{"C:\\projects\\sympli\\star-wars\\src\\index.tsx":"1","C:\\projects\\sympli\\star-wars\\src\\reportWebVitals.ts":"2","C:\\projects\\sympli\\star-wars\\src\\App.tsx":"3","C:\\projects\\sympli\\star-wars\\src\\views\\View.tsx":"4","C:\\projects\\sympli\\star-wars\\src\\views\\AllPersonsView.tsx":"5","C:\\projects\\sympli\\star-wars\\src\\views\\PersonDetailsView.tsx":"6","C:\\projects\\sympli\\star-wars\\src\\components\\Chip.tsx":"7","C:\\projects\\sympli\\star-wars\\src\\components\\Table.tsx":"8","C:\\projects\\sympli\\star-wars\\src\\components\\Footer.tsx":"9","C:\\projects\\sympli\\star-wars\\src\\utils\\persons.ts":"10","C:\\projects\\sympli\\star-wars\\src\\components\\Loading.tsx":"11"},{"size":500,"mtime":1611552355926,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611552355926,"results":"14","hashOfConfig":"13"},{"size":905,"mtime":1611698861343,"results":"15","hashOfConfig":"13"},{"size":3528,"mtime":1611730142117,"results":"16","hashOfConfig":"13"},{"size":1023,"mtime":1611703303525,"results":"17","hashOfConfig":"13"},{"size":2282,"mtime":1611705215803,"results":"18","hashOfConfig":"13"},{"size":733,"mtime":1611619365797,"results":"19","hashOfConfig":"13"},{"size":6841,"mtime":1611634344774,"results":"20","hashOfConfig":"13"},{"size":345,"mtime":1611621008822,"results":"21","hashOfConfig":"13"},{"size":1002,"mtime":1611627881038,"results":"22","hashOfConfig":"13"},{"size":581,"mtime":1611703029738,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"y3497x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\projects\\sympli\\star-wars\\src\\index.tsx",[],["51","52"],"C:\\projects\\sympli\\star-wars\\src\\reportWebVitals.ts",[],"C:\\projects\\sympli\\star-wars\\src\\App.tsx",["53","54","55","56"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport View from './views/View';\n\n\nconst App = () => {\n  const [person, setPerson] = React.useState([]);\n  const [films, setFilms] = React.useState([]);\n  // const fetchData = async (attr: string) => {\n  //     const response = await fetch(`https://swapi.dev/api/${attr}`);\n  //     return response.json();\n  // };\n\n  // useEffect(() =>{\n  //   fetchData('people')\n  //   .then(res => {\n  //     fetchData(res.people).then(people => setPerson(people.results));\n\n\n  //   // fetchData('https://swapi.dev/api/people/')\n  //   //   .then(res => {\n  //   //     fetchData(res.people).then(people => setPerson(people.results));\n  //   //     fetchData(res.films).then(films => setFilms(films.results));\n  //   //   });\n  // }, [])\n\n\n  \n\n  console.log(films)\n  return (\n    <div className=\"App\">\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\projects\\sympli\\star-wars\\src\\views\\View.tsx",[],"C:\\projects\\sympli\\star-wars\\src\\views\\AllPersonsView.tsx",[],"C:\\projects\\sympli\\star-wars\\src\\views\\PersonDetailsView.tsx",[],"C:\\projects\\sympli\\star-wars\\src\\components\\Chip.tsx",[],"C:\\projects\\sympli\\star-wars\\src\\components\\Table.tsx",["57"],"import React from 'react';\r\nimport { createStyles,  makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport type Data =  {\r\n  name: string;\r\n  height: string;\r\n  mass: string;\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n  disablePadding: boolean;\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n  { id: 'height', numeric: true, disablePadding: false, label: 'Height' },\r\n  { id: 'mass', numeric: true, disablePadding: false, label: 'Mass' }\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, order, orderBy, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function EnhancedTable(props: { rows: Data [], getSelectedPerson: (name: string | undefined) => void}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('name');\r\n  const [selected, setSelected] = React.useState<string>();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const rows = props.rows;\r\n\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleClick = async (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.preventDefault();\r\n    await setSelected(name);\r\n    props.getSelectedPerson(selected)\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size='medium'\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row: Data) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={selected === row.name}\r\n                    >\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                       <TableCell align=\"center\">{row.height}</TableCell>\r\n                      <TableCell align=\"center\">{row.mass}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\sympli\\star-wars\\src\\components\\Footer.tsx",[],"C:\\projects\\sympli\\star-wars\\src\\utils\\persons.ts",["58"],"import { useState, useEffect } from 'react';\r\n\r\nexport default function usePersons() {\r\n  const [page, setPage] = useState<number>(1)\r\n  const [persons, setPersons] = useState<string[]>([]);\r\n  const [error, setError] = useState<string>();;\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n        fetch(`https://swapi.dev/api/people/?page=${page}`)\r\n          .then(res => {\r\n              if (res.status === 404) setError('No other pages');\r\n              else return res.json()\r\n                  .then((result) => {\r\n                      console.log('got result', page);\r\n                      // if people or page could be set elsewhere,\r\n                      // use the callback form instead below\r\n                      setPersons(persons.concat(result.results));\r\n                      setPage(page || 0 + 1);\r\n                  });\r\n          })\r\n          .catch((err) => {\r\n              setError(err);\r\n          })\r\n    }\r\n}, [page]);\r\n\r\n  return {\r\n    persons,\r\n    error,\r\n    page\r\n  };\r\n}",["59","60"],"C:\\projects\\sympli\\star-wars\\src\\components\\Loading.tsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":7,"column":18,"nodeType":"67","messageId":"68","endLine":7,"endColumn":27},{"ruleId":"65","severity":1,"message":"71","line":8,"column":17,"nodeType":"67","messageId":"68","endLine":8,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":72,"column":36,"nodeType":"67","messageId":"68","endLine":72,"endColumn":44},{"ruleId":"73","severity":1,"message":"74","line":26,"column":4,"nodeType":"75","endLine":26,"endColumn":10,"suggestions":"76"},{"ruleId":"61","replacedBy":"77"},{"ruleId":"63","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'person' is assigned a value but never used.","'setPerson' is assigned a value but never used.","'setFilms' is assigned a value but never used.","'rowCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'error' and 'persons'. Either include them or remove the dependency array. You can also do a functional update 'setPersons(p => ...)' if you only need 'persons' in the 'setPersons' call.","ArrayExpression",["81"],["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [error, page, persons]",{"range":"84","text":"85"},[935,941],"[error, page, persons]"]